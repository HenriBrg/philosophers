
	delete : usleep 25 watching die at begin
	change : usleep 1000 watching die
	change : write instead of putstr
	change : delete strcompare
	change : fusion eat
	add    : le philo 1 prend la fourchette de gauche en premier (10 tests > 10k msec)

Est-ce vraiment utile ? :

	- Wait pour démarer tous les philos en même temps ?
		int i = (philo->pos - philo->philosophers) * -100;
		usleep(i);

	- usleep(1000) après thinking (recommandations de hberlin)

	- philosopher  take  chopsticks  only  if  both  chopsticks  were  there

	- philosopher  on  odd  numbered  take  the  first  left  new  chopsticks  right
	  while  the  even-numbered philosophers take the right  chopstick first  and chopsticks  left

	- Ajouter un semaphore pour que si qqun commence à prendre une fourchette, personne ne peut lui prendre la deuxième tant qu'il ne l'a pas prise. ça a réglé tous mes problèmes

		pseudo code sans sema mais basé sur chrono()
		i =  chrono;
		sem_wait 1 fork; (lock)
		if chrono - i > 10000 usec
			sem_post (release)
			return ;

-------

Pourquoi usleep est imprécis, surtout sur une VM ?
	https://stackoverflow.com/questions/12777254/time-delay-in-c-usleep

Pourquoi corriger usleep semble une fausse bonne idée ?
	https://frenchfries.net/paul/dfly/nanosleep.html
